<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alibaba.tutorial1.modules.system.dal.PassportMapper">

    <sql id="whereForFindList">
        <if test="request.userId!=null"> AND `USER_ID` =#{ request.userId }</if>
    </sql>

    <sql id="whereForSearchList">
    </sql>

    <select id="find" resultMap="passportPO">
        SELECT * FROM
        (
            SELECT
                <include refid="entityColumnList"/>
            FROM
                `SYS_PASSPORT`
            WHERE
                `IS_DELETED`=0
                <include refid="whereForFindList" />
        ) AS T

        <if test="request.pageSize !=0">
            LIMIT #{ request.beginItemIndex }, #{ request.pageSize }
        </if>
    </select>

    <select id="findCount"   resultType="java.lang.Long">
        SELECT
            COUNT(*)
        FROM
            `SYS_PASSPORT`
        WHERE
            `IS_DELETED`=0
            <include refid="whereForFindList" />
    </select>

    <select id="search" resultMap="passportPO">
        SELECT * FROM
        (
            SELECT
                <include refid="entityColumnList"/>
            FROM
                `SYS_PASSPORT`
            WHERE
                `IS_DELETED`=0
                <if test="request.keyword !=null">
                      <include refid="whereForSearchList" />
                </if>

        ) AS T
        <if test="request.pageSize !=0">
            LIMIT #{ request.beginItemIndex }, #{ request.pageSize }
        </if>
    </select>

    <select id="searchCount"   resultType="java.lang.Long">
        SELECT
            COUNT(*)
        FROM
            `SYS_PASSPORT`
        WHERE
            `IS_DELETED`=0
            <if test="request.keyword !=null">
                  <include refid="whereForSearchList" />
            </if>
    </select>

    <update id="update">
        UPDATE
            `SYS_PASSPORT`
        SET
        `USER_ID`=#{ request.userId },
        `ISSUE_TIME`=#{ request.issueTime },
        `EXPIRE_TIME`=#{ request.expireTime },
        `REVOKE_TIME`=#{ request.revokeTime },
        `REVOKE_TYPE`=#{ request.revokeType },
        `ISSUE_IP`=#{ request.issueIp },
        `ISSUE_CLIENT`=#{ request.issueClient },
        `LAST_UPDATED_BY`=#{ passport.userId }
        ,`LAST_UPDATE_TIME`=SYSDATE()
        ,`ROW_VERSION`=#{ request.rowVersion }+1
        WHERE
            `IS_DELETED`=0
            AND `ID` = #{ request.id }
            AND `ROW_VERSION` = #{ request.rowVersion }
    </update>
    <update id= "invokeBatch">
        UPDATE
        `SYS_PASSPORT`
        SET
        `REVOKE_TIME`=SYSDATE(),
        `REVOKE_TYPE`= "MODIFY"
        ,`LAST_UPDATED_BY`=#{ passport.userId }
        ,`LAST_UPDATE_TIME`=SYSDATE()
        WHERE
        `IS_DELETED`=0
        AND `ID` in
        <foreach collection="list" item= "id" index ="index" open= "(" close =")" separator=",">
            #{id}
        </foreach >
    </update >

</mapper>